.. _parabolics.at:

parabolics.at
=====================================

See "Parabolic Subgroups and Induction", in dropbox, ultimately on atlas web site.

Fix a subset S of the simple roots, defining the complex standard
parabolic :math:`P_S`  of type S. We define a set KGP(S) (a
quotient of KGB) such that (roughly) KGP(S) <-> :math:`K\backslash G/P_S` .

More precisely, for any :math:`x\in`  KGB and :math:`p(\xi)=x` ,
KGP(S) is canonically in bijection with :math:`K_{\xi}\backslash G/P_S` ; i.e.,
:math:`K_{\xi}`  conjugacy classes of parabolics of type S.

K orbits on :math:`G/P_S` , equivalently K-conjugacy classes of parabolics of type S:
Given a RealForm and a subset S of the simple roots,
S -> partial order on KGB, generated by ascents in S
-> equivalence relation generated by this
KGB/equivalence <-> :math:`K\backslash G/P_S` 
Define KGP to be KGB modulo this equivalence.

Data: ([int],KGBElt)=(S,x) where S lists the indices of a subset of the
simple roots of root_datum(x)

Equivalence: (S,x)=(S',y) if these correspond to the same K orbit on :math:`G/P_S` ,
which means:
real_form(x)=real_form(y), S=S'  (i.e. same complex parabolic), and
x=y in the equivalence defined by S.
In particular, given (S,x), taking x itself for the strong real form,
(S,x) goes to the :math:`K_x` -conjugacy class of the standard parabolic :math:`P_S` .

The data type is KGPElt or Parabolic (synonyms).

Given (S,x),
write :math:`[x_1,...,x_n]`  for the S-equivalence class of :math:`x\subset`  KGB.

The last element :math:`x_n`  is maximal, and is uniquely determined.
This orbit of K on :math:`G/P_S`  is closed <=> :math:`x_1`  is closed in KGB.

ComplexParabolic data type:
(RootDatum rd,[int] S) <->  G-conjugacy class of standard parabolic with
Levi factor given by subset S of simple roots

More topics addressed in this file:
parabolics with :math:`\theta` -stable Levi factor;
:math:`\theta` -stable parabolics;
real parabolics.


**This script imports the following .at files:**

| :ref:`sort.at<sort.at>`
| :ref:`Weylgroup.at<Weylgroup.at>`
| :ref:`group_operations.at<group_operations.at>`
|


.. toctree::
   :maxdepth: 1

   parabolics_index
   parabolics_ref
